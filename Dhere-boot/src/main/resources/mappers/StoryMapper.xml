<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springbootstudy.dhere.mappers.StoryMapper">

<!-- 초기 스토리 리스트 출력 -->
<select id="getStoryList" resultMap="StoryResultMap">
		SELECT
		s.story_no,
		s.title,
		s.email,
		s.reg_date,
		s.category_no,
		s.read_count,
		s.thank,
		s.nickname,
		i.file_name,
		m.picture,
		j.category_name		
		FROM
		story s		
		LEFT JOIN
		image i ON s.story_no = i.story_no
		LEFT JOIN
		member m ON s.email = m.email
		LEFT JOIN
		job j ON s.category_no = j.category_no		
		WHERE
		i.image_no = (SELECT MIN(image_no) FROM image WHERE story_no = s.story_no)
		ORDER BY s.reg_date DESC
	</select>

<!-- 초기 스토리 리스트 출력을 위한 ResultMap -->
<resultMap id="StoryResultMap" type="Story">
	<id property="storyNo" column="story_no" />
	<result property="title" column="title" />
	<result property="email" column="email" />
	<result property="regDate" column="reg_date" />
	<result property="categoryNo" column="category_no" />
	<result property="readCount" column="read_count" />
	<result property="thank" column="thank" />
	<result property="nickname" column="nickname" />
	<result property="fileName" column="file_name" />
	<result property="picture" column="picture" />
	<result property="categoryName" column="category_name" />
</resultMap>


<select id="getStoryListPaged" resultType="Story" resultMap="StoryResultMapPaged" parameterType="hashmap">
    SELECT
    s.story_no,
    s.title,
    s.content1,
    s.content2,
    s.content3,
    s.content4,
    s.email,
    s.reg_date,
    s.category_no,
    s.read_count,
    s.thank,
    s.nickname,
    i.file_name,
    m.picture,
    t.tag_name,
    j.category_name
    
    FROM
    story s
    
    JOIN
    image i ON s.story_no = i.story_no
    JOIN
    member m ON s.email = m.email
    JOIN
    tag_post tp ON s.story_no = tp.story_no
    JOIN
    tag t ON tp.tag_no = t.tag_no
    JOIN
    job j ON s.category_no = j.category_no
    
    WHERE
    i.image_no = (SELECT MIN(image_no) FROM image WHERE story_no = s.story_no)
    <!-- Additional conditions for searchList -->
    <if test='searchKeyWord != null and searchKeyWord != "null"'>
        AND t.tag_name=#{searchKeyword}
    </if>
    <!-- Additional conditions for storyList -->
    <if test='selectedJob != null and selectedJob != "null"'>
        AND j.category_name=#{selectedJob}
    </if>
    GROUP BY s.story_no
    <choose>
        <!-- Sort by 'thank' -->
        <when test="sort == 'thank'">
            ORDER BY s.thank DESC
        </when>
        <!-- Sort by 'recent' -->
        <when test="sort == 'recent'">
            ORDER BY s.reg_date DESC
        </when>
    </choose>
   	LIMIT #{offset}, #{limit}
</select>

<!-- ajax 스토리 리스트 출력을 위한 ResultMap -->
<resultMap id="StoryResultMapPaged" type="Story">
		<id property="storyNo" column="story_no" />
		<result property="title" column="title" />
		<result property="content1" column="content1" />
		<result property="content2" column="content2" />
		<result property="content3" column="content3" />
		<result property="content4" column="content4" />
		<result property="email" column="email" />
		<result property="regDate" column="reg_date" />
		<result property="categoryNo" column="category_no" />
		<result property="readCount" column="read_count" />
		<result property="thank" column="thank" />
		<result property="nickname" column="nickname" />
		<result property="fileName" column="file_name" />
		<result property="picture" column="picture" />
		<result property="categoryName" column="category_name" />
	    
		<collection property="tags" ofType="Tag">
			<id property="tagNo" column="tag_no" />
			<result property="tagName" column="tag_name" />
		</collection>
	</resultMap>
    

	<!-- 스토리 게시글 작성 쿼리 -->
	<insert id="postWrite" parameterType="story">
		INSERT INTO
		story(title,content1,content2,content3,content4,email,reg_date,category_no,nickname)
		VALUES(#{title},#{content1},#{content2},#{content3},#{content4},#{email},SYSDATE(),#{categoryNo},#{nickname})

		<selectKey keyProperty="storyNo" order="AFTER"
			resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>


	<!-- 스토리 이미지 작성 쿼리 -->
	<insert id="insertImage" parameterType="Image" useGeneratedKeys="true" keyProperty="imageNo">
		INSERT INTO image (file_name, story_no)
		VALUES (#{fileName}, #{storyNo})
	</insert>


	<insert id="insertTag" parameterType="Tag">
		INSERT INTO tag (tag_name)
		VALUES(#{tagName})
		<selectKey keyProperty="tagNo" order="AFTER"
			resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<insert id="insertTagPost" parameterType="Tag">
		INSERT INTO tag_post (tag_no, story_no)
		VALUES(#{tagNo},#{storyNo})
	</insert>
	
	<!-- 마커 정보 입력 쿼리 -->
	<insert id="insertMarker" parameterType="Marker">
		INSERT INTO marker(story_no,top1,left1,image_no,product_no)
		VALUES(#{storyNo},#{top1},#{left1},#{imageNo},#{productNo})
	</insert>

	<!-- storyDetail_기본 정보 가져오기 쿼리(syj) -->
	<select id="getStoryDetail" resultType="Story">
	    SELECT	s.story_no AS storyNo,
		    	s.title,
		   	 	s.content1,
		   		s.content2,
		   		s.content3,
		   		s.content4,
		    	s.email,
		    	s.reg_date AS regDate,
		    	s.category_no AS categoryNo,
		    	s.read_count AS readCount,
		    	s.thank,
		    	s.nickname,
		    	m.picture,
		    	j.category_name AS categoryName
		FROM	story s
		JOIN	member m ON s.email = m.email
		JOIN	job j ON s.category_no = j.category_no
		WHERE	s.story_no = #{storyNo};
	</select>
		
	<!-- storyDetail_이미지 가져오기 쿼리(syj) -->	
	<select id="getStoryDetailImage" resultType="Image">
    	SELECT	image_no as imageNo,
    				file_name as fileName,
					story_no as storyNo
	    FROM	image
	    WHERE	story_no = #{storyNo}
	</select>
	
	<!-- storyDetail_태그 가져오기 쿼리(syj) -->	
	<select id="getStoryDetailTag" resultType="Tag">
	    SELECT tp.story_no AS storyNo, 
	    			t.tag_name AS tagName
	    FROM 	tag_post tp
	    JOIN 	tag t ON tp.tag_no = t.tag_no
	    WHERE 	tp.story_no = #{storyNo}
	</select>
	
	<!-- storyDetail_마커 가져오기 쿼리(syj) -->	
	<select id="markerList" resultType="Marker">
	    SELECT 
		    m.marker_no AS markerNo,
		    m.story_no AS storyNo, 
		    m.top1,
		    m.left1,
		    m.image_no AS imageNo,
		    m.product_no AS productNo,
		    p.product_name AS productName,
		    p.brand_name AS brandName,
		    p.product_image AS productImage
		FROM 
		    marker m
		JOIN 
		    product p ON p.product_no = m.product_no
		WHERE 
		    story_no = #{storyNo}
	</select>
	
	<!-- storyDetail_조회수 증가 쿼리(syj) -->
	<update id="increaseReadCount" parameterType="Story">
	    UPDATE	story 
	    SET		read_count = read_count + 1 
	    WHERE	story_no = #{storyNo}
	</update>
	
	<!-- storyDetail_좋아요 증가 쿼리(syj) -->
	<update id="increaseThank" parameterType="Story">
	    UPDATE	story 
	    SET		thank = thank + 1
	    WHERE	story_no = #{storyNo}
	</update>

	<!-- storyDetail_좋아요 증가를 조회하는 쿼리(syj) -->
	<select id="selectThankCount" resultType="int" parameterType="int">
	    SELECT thank 
	    FROM story 
	    WHERE story_no = #{storyNo}
	</select>
	
	<!-- storyDetail_삭제 쿼리 추가(syj) -->
	<delete id="deleteStory">
		DELETE 
		FROM 	story
		WHERE 	story_no = #{story_no}
	</delete>
	<delete id="deleteScrapByStoryNo">
		DELETE 
		FROM 	scrap
		WHERE 	story_no = #{story_no}
	</delete>	
	<delete id="deleteReplyByStoryNo">
		DELETE 
		FROM 	reply
		WHERE 	story_no = #{story_no}
	</delete>	
	<delete id="deleteMarkerByStoryNo">
		DELETE 
		FROM 	marker
		WHERE 	story_no = #{story_no}
	</delete>	
	<delete id="deleteTagPostByStoryNo">
		DELETE 
		FROM 	tag_post
		WHERE 	story_no = #{story_no}
	</delete>	
	<delete id="deleteTagByStoryNo">
		DELETE 
		FROM 	tag
		WHERE 	tag_no = #{tag_no}
	</delete>	
	<delete id="deleteImageByStoryNo">
		DELETE 
		FROM 	image
		WHERE 	story_no = #{story_no}
	</delete>
		
	<!-- storyDetail_수정 쿼리(syj) -->
	<update id="updateStoryProcess" parameterType="Story">
	    UPDATE	story
	    SET		title = #{title}, 
	    		content1 = #{content1},
	    		content2 = #{content2},
	    		content3 = #{content3},
	    		content4 = #{content4}
		WHERE 	story_no = #{storyNo}
	</update>
		
		

		
	<!-- 직종 조회 쿼리 -->
	<select id="getJobList" resultType="Job"
		resultMap="JobResultMap">
		SELECT * FROM job;
	</select>

	<!-- 직종 reulstMap -->
	<resultMap id="JobResultMap" type="Job">
		<id property="categoryNo" column="category_no" />
		<result property="categoryName" column="category_name" />
	</resultMap>

	<!-- 직종별 게시물 리스트 가져오기 쿼리 -->
	<select id="storyList" resultMap="jobStoryResultMap">
		SELECT
		s.story_no,
		s.title,
		s.content1,
		s.content2,
		s.content3,
		s.content4,
		s.email,
		s.reg_date,
		s.category_no,
		s.read_count,
		s.thank,
		s.nickname,
		i.file_name,
		m.picture,
		t.tag_name,
		j.category_name
		FROM
		story s
		LEFT JOIN
		image i ON s.story_no = i.story_no
		LEFT JOIN
		member m ON s.email = m.email
		LEFT JOIN
		tag_post tp ON s.story_no = tp.story_no
		LEFT JOIN
		tag t ON tp.tag_no = t.tag_no
		LEFT JOIN
		job j ON s.category_no = j.category_no
				WHERE
		i.image_no = (SELECT MIN(image_no) FROM image WHERE story_no = s.story_no)
		AND j.category_name=#{selectedJob}
		
		
	</select>
	
	<select id="sList" resultMap="jobStoryResultMap">
	    SELECT
	    s.story_no,
	    s.title,
	    s.content1,
	    s.content2,
	    s.content3,
	    s.content4,
	    s.email,
	    s.reg_date,
	    s.category_no,
	    s.read_count,
	    s.thank,
	    s.nickname,
	    i.file_name,
	    m.picture,
	    t.tag_name,
	    j.category_name
	    FROM
	    story s
	    LEFT JOIN
	    image i ON s.story_no = i.story_no
	    LEFT JOIN
	    member m ON s.email = m.email
	    LEFT JOIN
	    tag_post tp ON s.story_no = tp.story_no
	    LEFT JOIN
	    tag t ON tp.tag_no = t.tag_no
	    LEFT JOIN
	    job j ON s.category_no = j.category_no
	    WHERE
	    i.image_no = (SELECT MIN(image_no) FROM image WHERE story_no = s.story_no)
	    AND s.email = #{email}
	</select>
	
	
	
	<resultMap id="jobStoryResultMap" type="Story">
		<id property="storyNo" column="story_no" />
		<result property="title" column="title" />
		<result property="content1" column="content1" />
		<result property="content2" column="content2" />
		<result property="content3" column="content3" />
		<result property="content4" column="content4" />
		<result property="email" column="email" />
		<result property="regDate" column="reg_date" />
		<result property="categoryNo" column="category_no" />
		<result property="readCount" column="read_count" />
		<result property="thank" column="thank" />
		<result property="nickname" column="nickname" />
		<result property="fileName" column="file_name" />
		<result property="picture" column="picture" />
		<result property="categoryName" column="category_name" />

		<collection property="tags" ofType="Tag">
			<id property="tagNo" column="tag_no" />
			<result property="tagName" column="tag_name" />
		</collection>

	</resultMap>
	
	<!-- 검색결과 가져오기 리스트 -->
	<select id="searchList" resultMap="jobStoryResultMap">
			SELECT
			s.story_no,
			s.title,
			s.content1,
			s.content2,
			s.content3,
			s.content4,
			s.email,
			s.reg_date,
			s.category_no,
			s.read_count,
			s.thank,
			s.nickname,
			i.file_name,
			m.picture,
			t.tag_name,
			j.category_name
			FROM
			story s
			LEFT JOIN
			image i ON s.story_no = i.story_no
			LEFT JOIN
			member m ON s.email = m.email
			LEFT JOIN
			tag_post tp ON s.story_no = tp.story_no
			LEFT JOIN
			tag t ON tp.tag_no = t.tag_no
			LEFT JOIN
			job j ON s.category_no = j.category_no
					WHERE
			i.image_no = (SELECT MIN(image_no) FROM image WHERE story_no = s.story_no)
			AND t.tag_name=#{searchKeyword}
		</select>
		
	<!-- 정렬 결과 리스트 -->
	<select id="sortList" resultMap="jobStoryResultMap">
			SELECT
			s.story_no,
			s.title,
			s.content1,
			s.content2,
			s.content3,
			s.content4,
			s.email,
			s.reg_date,
			s.category_no,
			s.read_count,
			s.thank,
			s.nickname,
			i.file_name,
			m.picture,
			t.tag_name,
			j.category_name
			FROM
			story s
			LEFT JOIN
			image i ON s.story_no = i.story_no
			LEFT JOIN
			member m ON s.email = m.email
			LEFT JOIN
			tag_post tp ON s.story_no = tp.story_no
			LEFT JOIN
			tag t ON tp.tag_no = t.tag_no
			LEFT JOIN
			job j ON s.category_no = j.category_no
					WHERE
			i.image_no = (SELECT MIN(image_no) FROM image WHERE story_no = s.story_no)
			<choose>
				<when test="sort == 'thank'">
					ORDER BY s.thank DESC
				</when>
				<when test="sort == 'recent'">
					ORDER BY s.reg_date DESC
				</when>
				<otherwise>
					ORDER BY s.read_count DESC
				</otherwise>
			</choose>
		</select>




</mapper>
